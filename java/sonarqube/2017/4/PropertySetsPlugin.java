/*
 * SonarQube
 * Copyright (C) 2009-2017 SonarSource SA
 * mailto:info AT sonarsource DOT com
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
import java.util.Collections;
import java.util.List;
import org.sonar.api.Properties;
import org.sonar.api.Property;
import org.sonar.api.PropertyField;
import org.sonar.api.PropertyType;
import org.sonar.api.SonarPlugin;

@Properties({
  @Property(
    key = "sonar.test.jira.servers",
    name = "Jira Servers",
    description = "List of jira server definitions",
    global = true,
    project = true,
    category = "DEV",
    fields = {
      @PropertyField(
        key = "key",
        name = "Key",
        type = PropertyType.STRING,
        indicativeSize = 10),
      @PropertyField(
        key = "url",
        name = "Url",
        description = "l'url du serveur jira",
        type = PropertyType.STRING,
        indicativeSize = 20),
      @PropertyField(
        key = "port",
        name = "Port",
        type = PropertyType.INTEGER,
        indicativeSize = 5)}),
  @Property(
    key = "sonar.demo",
    name = "Demo",
    global = true,
    project = true,
    category = "DEV",
    fields = {
      @PropertyField(
        key = "text",
        name = "text",
        type = PropertyType.TEXT),
      @PropertyField(
        key = "boolean",
        name = "boolean",
        type = PropertyType.BOOLEAN),
      @PropertyField(
        key = "float",
        name = "float",
        type = PropertyType.FLOAT),
      @PropertyField(
        key = "license",
        name = "license",
        type = PropertyType.LICENSE),
      @PropertyField(
        key = "metric",
        name = "metric",
        type = PropertyType.METRIC),
      @PropertyField(
        key = "password",
        name = "password",
        type = PropertyType.PASSWORD),
      @PropertyField(
        key = "regexp",
        name = "regexp",
        type = PropertyType.REGULAR_EXPRESSION),
      @PropertyField(
        key = "list",
        name = "list",
        type = PropertyType.SINGLE_SELECT_LIST,
        options = {"AAA", "BBB"})}),
  @Property(
    key = "sonar.autogenerated",
    name = "Auto-generated",
    global = true,
    project = true,
    category = "DEV",
    fields = {
      @PropertyField(
        key = "value",
        name = "value",
        type = PropertyType.STRING)}),
  @Property(
    key = "sonar.test.jira",
    name = "Jira",
    project = true,
    category = "DEV",
    propertySetKey = "sonar.test.jira.servers")})
public class PropertySetsPlugin extends SonarPlugin {
  public List getExtensions() {
    return Collections.emptyList();
  }
}
